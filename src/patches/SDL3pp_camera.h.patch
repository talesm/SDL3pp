14c14
<  * @defgroup CategoryCamera Category Camera
---
>  * @defgroup CategoryCamera Camera Support
350,351c350
<    * @param spec the CameraSpec to be initialized by this function.
<    * @throws Error on failure.
---
>    * @returns the CameraSpec or std::nullopt if waiting for user approval.
392,393c391,392
<    * @returns a new frame of video on success.
<    * @throws Error on failure.
---
>    * @returns a new frame of video on success, nullptr if none is currently
>    *          available.
401c400
<   Surface AcquireFrame(Uint64* timestampNS);
---
>   Surface AcquireFrame(Uint64* timestampNS = nullptr);
531,532c530
<  *          call GetError() for more information. This should be freed
<  *          with free() when it is no longer needed.
---
>  *          call GetError() for more information.
540c538,543
< inline OwnArray<CameraID> GetCameras() { return SDL_GetCameras(); }
---
> inline OwnArray<CameraID> GetCameras()
> {
>   int count;
>   auto data = SDL_GetCameras(&count);
>   return OwnArray<CameraID>(data, count);
> }
749c752
<   return CheckError(SDL_GetCameraProperties(camera));
---
>   return {CheckError(SDL_GetCameraProperties(camera))};
771,772c774
<  * @param spec the CameraSpec to be initialized by this function.
<  * @throws Error on failure.
---
>  * @returns the CameraSpec or std::nullopt if waiting for user approval.
782c784,785
<   return CheckError(SDL_GetCameraFormat(camera));
---
>   if (CameraSpec spec; SDL_GetCameraFormat(camera, &spec)) return spec;
>   return std::nullopt;
822,823c825,826
<  * @returns a new frame of video on success.
<  * @throws Error on failure.
---
>  * @returns a new frame of video on success, nullptr if none is currently
>  *          available.
831c834,835
< inline Surface AcquireCameraFrame(CameraParam camera, Uint64* timestampNS)
---
> inline Surface AcquireCameraFrame(CameraParam camera,
>                                   Uint64* timestampNS = nullptr)
833c837
<   return CheckError(SDL_AcquireCameraFrame(camera, timestampNS));
---
>   return Surface::Borrow(SDL_AcquireCameraFrame(camera, timestampNS));
