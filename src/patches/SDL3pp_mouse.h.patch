11c11
<  * @defgroup CategoryMouse Category Mouse
---
>  * @defgroup CategoryMouse Mouse Support
240,245c240,242
<    * @param w the width of the cursor.
<    * @param h the height of the cursor.
<    * @param hot_x the x-axis offset from the left of the cursor image to the
<    *              mouse x position, in the range of 0 to `w` - 1.
<    * @param hot_y the y-axis offset from the top of the cursor image to the
<    *              mouse y position, in the range of 0 to `h` - 1.
---
>    * @param size the width and height of the cursor.
>    * @param hot the x position of the cursor hot spot, from the top-left, in the
>    *            range of 0 to `size.x` - 1 and 0 to `size.y` - 1.
262c259,260
<     : m_resource(CheckError(SDL_CreateCursor(data, mask, size, hot)))
---
>     : m_resource(
>         CheckError(SDL_CreateCursor(data, mask, size.x, size.y, hot.x, hot.y)))
280,281c278
<    * @param hot_x the x position of the cursor hot spot.
<    * @param hot_y the y position of the cursor hot spot.
---
>    * @param hot the x, y position of the cursor hot spot.
295c292
<     : m_resource(CheckError(SDL_CreateColorCursor(surface, hot)))
---
>     : m_resource(CheckError(SDL_CreateColorCursor(surface, hot.x, hot.y)))
450a448,451
> /**
>  * Represents a button index.
>  *
>  */
453c454
< #define SDL_BUTTON_LEFT 1
---
> constexpr MouseButton BUTTON_LEFT = SDL_BUTTON_LEFT; ///< Left button
455c456
< #define SDL_BUTTON_MIDDLE 2
---
> constexpr MouseButton BUTTON_MIDDLE = SDL_BUTTON_MIDDLE; ///< Middle button
457c458
< #define SDL_BUTTON_RIGHT 3
---
> constexpr MouseButton BUTTON_RIGHT = SDL_BUTTON_RIGHT; ///< Right button
459c460
< #define SDL_BUTTON_X1 4
---
> constexpr MouseButton BUTTON_X1 = SDL_BUTTON_X1; ///< X1 button
461c462
< #define SDL_BUTTON_X2 5
---
> constexpr MouseButton BUTTON_X2 = SDL_BUTTON_X2; ///< X2 button
462a464
> /** Returns mask for button */
489,493c491,492
<  * @param count a pointer filled in with the number of mice returned, may be
<  *              nullptr.
<  * @returns a 0 terminated array of mouse instance IDs or nullptr on failure;
<  *          call GetError() for more information. This should be freed
<  *          with free() when it is no longer needed.
---
>  * @returns a 0 terminated array of mouse instance IDs.
>  * @throws Error on failure.
502c501,506
< inline OwnArray<MouseID> GetMice() { return SDL_GetMice(); }
---
> inline OwnArray<MouseID> GetMice()
> {
>   int count;
>   auto data = CheckError(SDL_GetMice(&count));
>   return OwnArray<MouseID>{data, size_t(count)};
> }
533c537
< inline WindowRef GetMouseFocus() { return SDL_GetMouseFocus(); }
---
> inline WindowRef GetMouseFocus() { return {SDL_GetMouseFocus()}; }
659,661c663
<  *               mouse focus.
<  * @param x the x coordinate within the window.
<  * @param y the y coordinate within the window.
---
>  * @param p the x, y coordinates within the window.
671c673
<   SDL_WarpMouseInWindow(m_resource, p);
---
>   SDL_WarpMouseInWindow(m_resource, p.x, p.y);
685,686c687
<  * @param x the x coordinate.
<  * @param y the y coordinate.
---
>  * @param p the x, y coordinates;
697c698
<   CheckError(SDL_WarpMouseGlobal(p));
---
>   CheckError(SDL_WarpMouseGlobal(p.x, p.y));
821,826c822,824
<  * @param w the width of the cursor.
<  * @param h the height of the cursor.
<  * @param hot_x the x-axis offset from the left of the cursor image to the
<  *              mouse x position, in the range of 0 to `w` - 1.
<  * @param hot_y the y-axis offset from the top of the cursor image to the
<  *              mouse y position, in the range of 0 to `h` - 1.
---
>  * @param size the width and height of the cursor.
>  * @param hot the x position of the cursor hot spot, from the top-left, in the
>  *            range of 0 to `size.x` - 1 and 0 to `size.y` - 1.
842,843c840
<                            int hot_x,
<                            int hot_y)
---
>                            const PointRaw& hot)
845c842
<   return Cursor(data, mask, size, hot_x, hot_y);
---
>   return Cursor(data, mask, size, hot);
862,863c859
<  * @param hot_x the x position of the cursor hot spot.
<  * @param hot_y the y position of the cursor hot spot.
---
>  * @param hot the position of the cursor hot spot.
876c872
< inline Cursor CreateColorCursor(SurfaceParam surface, int hot_x, int hot_y)
---
> inline Cursor CreateColorCursor(SurfaceParam surface, const PointRaw& hot)
878c874
<   return Cursor(surface, hot_x, hot_y);
---
>   return Cursor(surface, hot);
931c927
< inline CursorRef GetCursor() { return SDL_GetCursor(); }
---
> inline CursorRef GetCursor() { return {SDL_GetCursor()}; }
948c944
<   return CheckError(SDL_GetDefaultCursor());
---
>   return {CheckError(SDL_GetDefaultCursor())};
