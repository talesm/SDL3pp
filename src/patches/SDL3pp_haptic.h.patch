12c12
<  * @defgroup CategoryHaptic Category Haptic
---
>  * @defgroup CategoryHaptic Force Feedback Support
143a144,148
>  * @name Haptic effects
>  * @{
>  */
> 
> /**
150c155
< using HapticEffectID = SDL_HapticEffectID;
---
> using HapticEffectID = int;
153c158
< using HapticEffectType = SDL_HapticEffectType;
---
> using HapticEffectType = Uint32;
365a371,377
> /// @}
> 
> /**
>  * @name Direction encodings
>  * @{
>  */
> 
367c379
< using HapticDirectionType = SDL_HapticDirectionType;
---
> using HapticDirectionType = Uint8;
407a420,421
> /// @}
> 
1273,1274d1286
<  * @param count a pointer filled in with the number of haptic devices
<  *              returned, may be nullptr.
1276,1277c1288
<  *          failure; call GetError() for more information. This should be
<  *          freed with free() when it is no longer needed.
---
>  *          failure; call GetError() for more information.
1283c1294,1299
< inline OwnArray<HapticID> GetHaptics() { return SDL_GetHaptics(); }
---
> inline OwnArray<HapticID> GetHaptics()
> {
>   int count;
>   auto data = SDL_GetHaptics(&count);
>   return OwnArray<HapticID>{data};
> }
1341c1357
<   return CheckError(SDL_GetHapticFromID(instance_id));
---
>   return {CheckError(SDL_GetHapticFromID(instance_id))};
