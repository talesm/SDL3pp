1260d1259
<    * @param num_bindings the number of bindings in the bindings array.
1313d1311
<    * @param num_bindings the number of storage texture to bind from the array.
1333d1330
<    * @param num_bindings the number of buffers to bind from the array.
1353,1354d1349
<    * @param num_bindings the number of texture-sampler pairs to bind from the
<    *                     array.
1375d1369
<    * @param num_bindings the number of storage textures to bind from the array.
1396d1389
<    * @param num_bindings the number of storage buffers to bind from the array.
1569,1570d1561
<    * @param num_bindings the number of texture-sampler bindings to bind from the
<    *                     array.
1591d1581
<    * @param num_bindings the number of storage textures to bind from the array.
1611d1600
<    * @param num_bindings the number of storage buffers to bind from the array.
2133d2121
<    * @param length the length of the data to write.
2150d2137
<    * @param length the length of the data to write.
2167d2153
<    * @param length the length of the data to write.
2186,2187d2171
<    * @param num_color_targets the number of color targets in the
<    *                          color_target_infos array.
2225,2226d2208
<    * @param num_storage_texture_bindings the number of storage textures to bind
<    *                                     from the array.
2229,2230d2210
<    * @param num_storage_buffer_bindings the number of storage buffers to bind
<    *                                    from the array.
3854d3833
<    * @param num_fences the number of fences in the fences array.
4998c4977
<   return CheckError(SDL_CreateGPUComputePipeline(device, &createinfo));
---
>   return GPUComputePipeline(device, createinfo);
5039c5018
<   return CheckError(SDL_CreateGPUGraphicsPipeline(device, &createinfo));
---
>   return GPUGraphicsPipeline(device, createinfo);
5079c5058
<   return CheckError(SDL_CreateGPUSampler(device, &createinfo));
---
>   return GPUSampler(device, createinfo);
5169c5148
<   return CheckError(SDL_CreateGPUShader(device, &createinfo));
---
>   return GPUShader(device, createinfo);
5242c5221
<   return CheckError(SDL_CreateGPUTexture(device, &createinfo));
---
>   return GPUTexture(device, createinfo);
5321c5300
<   return CheckError(SDL_CreateGPUBuffer(device, &createinfo));
---
>   return GPUBuffer(device, createinfo);
5367c5346
<   return CheckError(SDL_CreateGPUTransferBuffer(device, &createinfo));
---
>   return GPUTransferBuffer(device, createinfo);
5698d5676
<  * @param length the length of the data to write.
5729d5706
<  * @param length the length of the data to write.
5760d5736
<  * @param length the length of the data to write.
5793,5794d5768
<  * @param num_color_targets the number of color targets in the
<  *                          color_target_infos array.
5809,5810c5783,5786
<   return SDL_BeginGPURenderPass(
<     command_buffer, color_target_infos, depth_stencil_target_info);
---
>   return SDL_BeginGPURenderPass(command_buffer,
>                                 color_target_infos.data(),
>                                 color_target_infos.size(),
>                                 depth_stencil_target_info);
5871c5847
<   SDL_SetGPUScissor(render_pass, scissor);
---
>   SDL_SetGPUScissor(render_pass, &scissor);
5927d5902
<  * @param num_bindings the number of bindings in the bindings array.
5935c5910,5911
<   SDL_BindGPUVertexBuffers(render_pass, first_slot, bindings);
---
>   SDL_BindGPUVertexBuffers(
>     render_pass, first_slot, bindings.data(), bindings.size());
5982,5983d5957
<  * @param num_bindings the number of texture-sampler pairs to bind from the
<  *                     array.
5994c5968,5971
<   SDL_BindGPUVertexSamplers(render_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUVertexSamplers(render_pass,
>                             first_slot,
>                             texture_sampler_bindings.data(),
>                             texture_sampler_bindings.size());
6017d5993
<  * @param num_bindings the number of storage texture to bind from the array.
6028c6004,6005
<   SDL_BindGPUVertexStorageTextures(render_pass, first_slot, storage_textures);
---
>   SDL_BindGPUVertexStorageTextures(
>     render_pass, first_slot, storage_textures.data(), storage_textures.size());
6051d6027
<  * @param num_bindings the number of buffers to bind from the array.
6062c6038,6039
<   SDL_BindGPUVertexStorageBuffers(render_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUVertexStorageBuffers(
>     render_pass, first_slot, storage_buffers.data(), storage_buffers.size());
6085,6086d6061
<  * @param num_bindings the number of texture-sampler pairs to bind from the
<  *                     array.
6097,6098c6072,6075
<   SDL_BindGPUFragmentSamplers(
<     render_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUFragmentSamplers(render_pass,
>                               first_slot,
>                               texture_sampler_bindings.data(),
>                               texture_sampler_bindings.size());
6121d6097
<  * @param num_bindings the number of storage textures to bind from the array.
6132c6108,6109
<   SDL_BindGPUFragmentStorageTextures(render_pass, first_slot, storage_textures);
---
>   SDL_BindGPUFragmentStorageTextures(
>     render_pass, first_slot, storage_textures.data(), storage_textures.size());
6155d6131
<  * @param num_bindings the number of storage buffers to bind from the array.
6166c6142,6143
<   SDL_BindGPUFragmentStorageBuffers(render_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUFragmentStorageBuffers(
>     render_pass, first_slot, storage_buffers.data(), storage_buffers.size());
6373,6374d6349
<  * @param num_storage_texture_bindings the number of storage textures to bind
<  *                                     from the array.
6377,6378d6351
<  * @param num_storage_buffer_bindings the number of storage buffers to bind
<  *                                    from the array.
6390,6391c6363,6367
<   return SDL_BeginGPUComputePass(
<     command_buffer, storage_texture_bindings, storage_buffer_bindings);
---
>   return SDL_BeginGPUComputePass(command_buffer,
>                                  storage_texture_bindings.data(),
>                                  storage_texture_bindings.size(),
>                                  storage_buffer_bindings.data(),
>                                  storage_buffer_bindings.size());
6433,6434d6408
<  * @param num_bindings the number of texture-sampler bindings to bind from the
<  *                     array.
6445,6446c6419,6422
<   SDL_BindGPUComputeSamplers(
<     compute_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUComputeSamplers(compute_pass,
>                              first_slot,
>                              texture_sampler_bindings.data(),
>                              texture_sampler_bindings.size());
6469d6444
<  * @param num_bindings the number of storage textures to bind from the array.
6480c6455,6456
<   SDL_BindGPUComputeStorageTextures(compute_pass, first_slot, storage_textures);
---
>   SDL_BindGPUComputeStorageTextures(
>     compute_pass, first_slot, storage_textures.data(), storage_textures.size());
6503d6478
<  * @param num_bindings the number of storage buffers to bind from the array.
6514c6489,6490
<   SDL_BindGPUComputeStorageBuffers(compute_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUComputeStorageBuffers(
>     compute_pass, first_slot, storage_buffers.data(), storage_buffers.size());
7421d7396
<  * @param num_fences the number of fences in the fences array.
7433c7408,7409
<   CheckError(SDL_WaitForGPUFences(device, wait_all, fences));
---
>   CheckError(
>     SDL_WaitForGPUFences(device, wait_all, fences.data(), fences.size()));
