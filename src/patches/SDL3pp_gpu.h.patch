1260d1259
<    * @param num_bindings the number of bindings in the bindings array.
1313d1311
<    * @param num_bindings the number of storage texture to bind from the array.
1333d1330
<    * @param num_bindings the number of buffers to bind from the array.
1353,1354d1349
<    * @param num_bindings the number of texture-sampler pairs to bind from the
<    *                     array.
1375d1369
<    * @param num_bindings the number of storage textures to bind from the array.
1396d1389
<    * @param num_bindings the number of storage buffers to bind from the array.
1569,1570d1561
<    * @param num_bindings the number of texture-sampler bindings to bind from the
<    *                     array.
1591d1581
<    * @param num_bindings the number of storage textures to bind from the array.
1612d1601
<    * @param num_bindings the number of storage buffers to bind from the array.
2137d2125
<    * @param length the length of the data to write.
2154d2141
<    * @param length the length of the data to write.
2171d2157
<    * @param length the length of the data to write.
2190,2191d2175
<    * @param num_color_targets the number of color targets in the
<    *                          color_target_infos array.
2229,2230d2212
<    * @param num_storage_texture_bindings the number of storage textures to bind
<    *                                     from the array.
2233,2234d2214
<    * @param num_storage_buffer_bindings the number of storage buffers to bind
<    *                                    from the array.
3859d3838
<    * @param num_fences the number of fences in the fences array.
5003c4982
<   return CheckError(SDL_CreateGPUComputePipeline(device, &createinfo));
---
>   return GPUComputePipeline(device, createinfo);
5044c5023
<   return CheckError(SDL_CreateGPUGraphicsPipeline(device, &createinfo));
---
>   return GPUGraphicsPipeline(device, createinfo);
5084c5063
<   return CheckError(SDL_CreateGPUSampler(device, &createinfo));
---
>   return GPUSampler(device, createinfo);
5174c5153
<   return CheckError(SDL_CreateGPUShader(device, &createinfo));
---
>   return GPUShader(device, createinfo);
5247c5226
<   return CheckError(SDL_CreateGPUTexture(device, &createinfo));
---
>   return GPUTexture(device, createinfo);
5326c5305
<   return CheckError(SDL_CreateGPUBuffer(device, &createinfo));
---
>   return GPUBuffer(device, createinfo);
5372c5351
<   return CheckError(SDL_CreateGPUTransferBuffer(device, &createinfo));
---
>   return GPUTransferBuffer(device, createinfo);
5703d5681
<  * @param length the length of the data to write.
5734d5711
<  * @param length the length of the data to write.
5765d5741
<  * @param length the length of the data to write.
5798,5799d5773
<  * @param num_color_targets the number of color targets in the
<  *                          color_target_infos array.
5814,5815c5788,5791
<   return SDL_BeginGPURenderPass(
<     command_buffer, color_target_infos, depth_stencil_target_info);
---
>   return SDL_BeginGPURenderPass(command_buffer,
>                                 color_target_infos.data(),
>                                 color_target_infos.size(),
>                                 depth_stencil_target_info);
5877c5853
<   SDL_SetGPUScissor(render_pass, scissor);
---
>   SDL_SetGPUScissor(render_pass, &scissor);
5933d5908
<  * @param num_bindings the number of bindings in the bindings array.
5941c5916,5917
<   SDL_BindGPUVertexBuffers(render_pass, first_slot, bindings);
---
>   SDL_BindGPUVertexBuffers(
>     render_pass, first_slot, bindings.data(), bindings.size());
5988,5989d5963
<  * @param num_bindings the number of texture-sampler pairs to bind from the
<  *                     array.
6000c5974,5977
<   SDL_BindGPUVertexSamplers(render_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUVertexSamplers(render_pass,
>                             first_slot,
>                             texture_sampler_bindings.data(),
>                             texture_sampler_bindings.size());
6023d5999
<  * @param num_bindings the number of storage texture to bind from the array.
6034c6010,6011
<   SDL_BindGPUVertexStorageTextures(render_pass, first_slot, storage_textures);
---
>   SDL_BindGPUVertexStorageTextures(
>     render_pass, first_slot, storage_textures.data(), storage_textures.size());
6057d6033
<  * @param num_bindings the number of buffers to bind from the array.
6068c6044,6045
<   SDL_BindGPUVertexStorageBuffers(render_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUVertexStorageBuffers(
>     render_pass, first_slot, storage_buffers.data(), storage_buffers.size());
6091,6092d6067
<  * @param num_bindings the number of texture-sampler pairs to bind from the
<  *                     array.
6103,6104c6078,6081
<   SDL_BindGPUFragmentSamplers(
<     render_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUFragmentSamplers(render_pass,
>                               first_slot,
>                               texture_sampler_bindings.data(),
>                               texture_sampler_bindings.size());
6127d6103
<  * @param num_bindings the number of storage textures to bind from the array.
6138c6114,6115
<   SDL_BindGPUFragmentStorageTextures(render_pass, first_slot, storage_textures);
---
>   SDL_BindGPUFragmentStorageTextures(
>     render_pass, first_slot, storage_textures.data(), storage_textures.size());
6161d6137
<  * @param num_bindings the number of storage buffers to bind from the array.
6172c6148,6149
<   SDL_BindGPUFragmentStorageBuffers(render_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUFragmentStorageBuffers(
>     render_pass, first_slot, storage_buffers.data(), storage_buffers.size());
6379,6380d6355
<  * @param num_storage_texture_bindings the number of storage textures to bind
<  *                                     from the array.
6383,6384d6357
<  * @param num_storage_buffer_bindings the number of storage buffers to bind
<  *                                    from the array.
6396,6397c6369,6373
<   return SDL_BeginGPUComputePass(
<     command_buffer, storage_texture_bindings, storage_buffer_bindings);
---
>   return SDL_BeginGPUComputePass(command_buffer,
>                                  storage_texture_bindings.data(),
>                                  storage_texture_bindings.size(),
>                                  storage_buffer_bindings.data(),
>                                  storage_buffer_bindings.size());
6440,6441d6415
<  * @param num_bindings the number of texture-sampler bindings to bind from the
<  *                     array.
6452,6453c6426,6429
<   SDL_BindGPUComputeSamplers(
<     compute_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUComputeSamplers(compute_pass,
>                              first_slot,
>                              texture_sampler_bindings.data(),
>                              texture_sampler_bindings.size());
6476d6451
<  * @param num_bindings the number of storage textures to bind from the array.
6487c6462,6463
<   SDL_BindGPUComputeStorageTextures(compute_pass, first_slot, storage_textures);
---
>   SDL_BindGPUComputeStorageTextures(
>     compute_pass, first_slot, storage_textures.data(), storage_textures.size());
6510d6485
<  * @param num_bindings the number of storage buffers to bind from the array.
6521c6496,6497
<   SDL_BindGPUComputeStorageBuffers(compute_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUComputeStorageBuffers(
>     compute_pass, first_slot, storage_buffers.data(), storage_buffers.size());
7434d7409
<  * @param num_fences the number of fences in the fences array.
7446c7421,7422
<   CheckError(SDL_WaitForGPUFences(device, wait_all, fences));
---
>   CheckError(
>     SDL_WaitForGPUFences(device, wait_all, fences.data(), fences.size()));
