1260d1259
<    * @param num_bindings the number of bindings in the bindings array.
1313d1311
<    * @param num_bindings the number of storage texture to bind from the array.
1333d1330
<    * @param num_bindings the number of buffers to bind from the array.
1353,1354d1349
<    * @param num_bindings the number of texture-sampler pairs to bind from the
<    *                     array.
1375d1369
<    * @param num_bindings the number of storage textures to bind from the array.
1396d1389
<    * @param num_bindings the number of storage buffers to bind from the array.
1569,1570d1561
<    * @param num_bindings the number of texture-sampler bindings to bind from the
<    *                     array.
1591d1581
<    * @param num_bindings the number of storage textures to bind from the array.
1611d1600
<    * @param num_bindings the number of storage buffers to bind from the array.
2133d2121
<    * @param length the length of the data to write.
2150d2137
<    * @param length the length of the data to write.
2167d2153
<    * @param length the length of the data to write.
2186,2187d2171
<    * @param num_color_targets the number of color targets in the
<    *                          color_target_infos array.
2225,2226d2208
<    * @param num_storage_texture_bindings the number of storage textures to bind
<    *                                     from the array.
2229,2230d2210
<    * @param num_storage_buffer_bindings the number of storage buffers to bind
<    *                                    from the array.
3855d3834
<    * @param num_fences the number of fences in the fences array.
4999c4978
<   return CheckError(SDL_CreateGPUComputePipeline(device, &createinfo));
---
>   return GPUComputePipeline(device, createinfo);
5040c5019
<   return CheckError(SDL_CreateGPUGraphicsPipeline(device, &createinfo));
---
>   return GPUGraphicsPipeline(device, createinfo);
5080c5059
<   return CheckError(SDL_CreateGPUSampler(device, &createinfo));
---
>   return GPUSampler(device, createinfo);
5170c5149
<   return CheckError(SDL_CreateGPUShader(device, &createinfo));
---
>   return GPUShader(device, createinfo);
5243c5222
<   return CheckError(SDL_CreateGPUTexture(device, &createinfo));
---
>   return GPUTexture(device, createinfo);
5322c5301
<   return CheckError(SDL_CreateGPUBuffer(device, &createinfo));
---
>   return GPUBuffer(device, createinfo);
5368c5347
<   return CheckError(SDL_CreateGPUTransferBuffer(device, &createinfo));
---
>   return GPUTransferBuffer(device, createinfo);
5699d5677
<  * @param length the length of the data to write.
5730d5707
<  * @param length the length of the data to write.
5761d5737
<  * @param length the length of the data to write.
5794,5795d5769
<  * @param num_color_targets the number of color targets in the
<  *                          color_target_infos array.
5810,5811c5784,5787
<   return SDL_BeginGPURenderPass(
<     command_buffer, color_target_infos, depth_stencil_target_info);
---
>   return SDL_BeginGPURenderPass(command_buffer,
>                                 color_target_infos.data(),
>                                 color_target_infos.size(),
>                                 depth_stencil_target_info);
5872c5848
<   SDL_SetGPUScissor(render_pass, scissor);
---
>   SDL_SetGPUScissor(render_pass, &scissor);
5928d5903
<  * @param num_bindings the number of bindings in the bindings array.
5936c5911,5912
<   SDL_BindGPUVertexBuffers(render_pass, first_slot, bindings);
---
>   SDL_BindGPUVertexBuffers(
>     render_pass, first_slot, bindings.data(), bindings.size());
5983,5984d5958
<  * @param num_bindings the number of texture-sampler pairs to bind from the
<  *                     array.
5995c5969,5972
<   SDL_BindGPUVertexSamplers(render_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUVertexSamplers(render_pass,
>                             first_slot,
>                             texture_sampler_bindings.data(),
>                             texture_sampler_bindings.size());
6018d5994
<  * @param num_bindings the number of storage texture to bind from the array.
6029c6005,6006
<   SDL_BindGPUVertexStorageTextures(render_pass, first_slot, storage_textures);
---
>   SDL_BindGPUVertexStorageTextures(
>     render_pass, first_slot, storage_textures.data(), storage_textures.size());
6052d6028
<  * @param num_bindings the number of buffers to bind from the array.
6063c6039,6040
<   SDL_BindGPUVertexStorageBuffers(render_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUVertexStorageBuffers(
>     render_pass, first_slot, storage_buffers.data(), storage_buffers.size());
6086,6087d6062
<  * @param num_bindings the number of texture-sampler pairs to bind from the
<  *                     array.
6098,6099c6073,6076
<   SDL_BindGPUFragmentSamplers(
<     render_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUFragmentSamplers(render_pass,
>                               first_slot,
>                               texture_sampler_bindings.data(),
>                               texture_sampler_bindings.size());
6122d6098
<  * @param num_bindings the number of storage textures to bind from the array.
6133c6109,6110
<   SDL_BindGPUFragmentStorageTextures(render_pass, first_slot, storage_textures);
---
>   SDL_BindGPUFragmentStorageTextures(
>     render_pass, first_slot, storage_textures.data(), storage_textures.size());
6156d6132
<  * @param num_bindings the number of storage buffers to bind from the array.
6167c6143,6144
<   SDL_BindGPUFragmentStorageBuffers(render_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUFragmentStorageBuffers(
>     render_pass, first_slot, storage_buffers.data(), storage_buffers.size());
6374,6375d6350
<  * @param num_storage_texture_bindings the number of storage textures to bind
<  *                                     from the array.
6378,6379d6352
<  * @param num_storage_buffer_bindings the number of storage buffers to bind
<  *                                    from the array.
6391,6392c6364,6368
<   return SDL_BeginGPUComputePass(
<     command_buffer, storage_texture_bindings, storage_buffer_bindings);
---
>   return SDL_BeginGPUComputePass(command_buffer,
>                                  storage_texture_bindings.data(),
>                                  storage_texture_bindings.size(),
>                                  storage_buffer_bindings.data(),
>                                  storage_buffer_bindings.size());
6434,6435d6409
<  * @param num_bindings the number of texture-sampler bindings to bind from the
<  *                     array.
6446,6447c6420,6423
<   SDL_BindGPUComputeSamplers(
<     compute_pass, first_slot, texture_sampler_bindings);
---
>   SDL_BindGPUComputeSamplers(compute_pass,
>                              first_slot,
>                              texture_sampler_bindings.data(),
>                              texture_sampler_bindings.size());
6470d6445
<  * @param num_bindings the number of storage textures to bind from the array.
6481c6456,6457
<   SDL_BindGPUComputeStorageTextures(compute_pass, first_slot, storage_textures);
---
>   SDL_BindGPUComputeStorageTextures(
>     compute_pass, first_slot, storage_textures.data(), storage_textures.size());
6504d6479
<  * @param num_bindings the number of storage buffers to bind from the array.
6515c6490,6491
<   SDL_BindGPUComputeStorageBuffers(compute_pass, first_slot, storage_buffers);
---
>   SDL_BindGPUComputeStorageBuffers(
>     compute_pass, first_slot, storage_buffers.data(), storage_buffers.size());
7427d7402
<  * @param num_fences the number of fences in the fences array.
7439c7414,7415
<   CheckError(SDL_WaitForGPUFences(device, wait_all, fences));
---
>   CheckError(
>     SDL_WaitForGPUFences(device, wait_all, fences.data(), fences.size()));
