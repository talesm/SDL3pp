4d3
< #include <SDL3/SDL_image.h>
10a10,18
> #if !defined(SDL3PP_DISABLE_IMAGE) && !defined(SDL3PP_ENABLE_IMAGE) &&         \
>   __has_include(<SDL3_image/SDL_image.h>)
> #define SDL3PP_ENABLE_IMAGE
> #endif
> 
> #if defined(SDL3PP_ENABLE_IMAGE) || defined(SDL3PP_DOC)
> 
> #include <SDL3_image/SDL_image.h>
> 
14c22
<  * @defgroup CategorySDLImage Category SDLImage
---
>  * @defgroup CategorySDLImage Load images from several formats
58,59c66,73
< /// Printable format: "%d.%d.%d", MAJOR, MINOR, MICRO
< #define SDL_IMAGE_MAJOR_VERSION 3
---
> #ifdef SDL3PP_DOC
> 
> /**
>  * @name Image version
>  * @{
>  * Printable format: "%d.%d.%d", MAJOR, MINOR, MICRO
>  */
> #define SDL_IMAGE_MAJOR_VERSION
61c75
< #define SDL_IMAGE_MINOR_VERSION 2
---
> #define SDL_IMAGE_MINOR_VERSION
63c77
< #define SDL_IMAGE_MICRO_VERSION 5
---
> #define SDL_IMAGE_MICRO_VERSION
65c79,83
< /// This is the version number macro for the current SDL_image version.
---
> /// @}
> 
> /**
>  * This is the version number macro for the current SDL_image version.
>  */
78a97,98
> #endif // SDL3PP_DOC
> 
88c108
< inline int Version();
---
> inline int Version() { return IMG_Version(); }
92,93d111
< inline int IMG::Version() { return SDL::Version(); }
< 
138,140d155
<  * When done with the returned surface, the app should dispose of it with a
<  * call to Surface.Destroy().
<  *
158c173
<   return IMG_LoadTyped_IO(src, closeio, type);
---
>   return Surface(IMG_LoadTyped_IO(src, closeio, type));
190,194d204
<  * When done with the returned surface, the app should dispose of it with a
<  * call to
<  * [Surface.Destroy](https://wiki.libsdl.org/SDL3/Surface.Destroy)
<  * ().
<  *
204c214
< inline Surface LoadSurface(StringParam file) { return IMG_Load(file); }
---
> inline Surface LoadSurface(StringParam file) { return Surface(IMG_Load(file)); }
244,246d253
<  * When done with the returned surface, the app should dispose of it with a
<  * call to Surface.Destroy().
<  *
258c265
< inline Surface LoadSurface(IOStreamParam src, bool closeio)
---
> inline Surface LoadSurface(IOStreamParam src, bool closeio = false)
260c267
<   return IMG_Load_IO(src, closeio);
---
>   return Surface(IMG_Load_IO(src, closeio));
292,296d298
<  * When done with the returned surface, the app should dispose of it with a
<  * call to
<  * [Surface.Destroy](https://wiki.libsdl.org/SDL3/Surface.Destroy)
<  * ().
<  *
349,351d350
<  * When done with the returned surface, the app should dispose of it with a
<  * call to Surface.Destroy().
<  *
389,391d387
<  * When done with the returned texture, the app should dispose of it with a
<  * call to Texture.Destroy().
<  *
403c399
<   return IMG_LoadTexture(renderer, file);
---
>   return Texture(IMG_LoadTexture(renderer, file));
436,438d431
<  * When done with the returned texture, the app should dispose of it with a
<  * call to Texture.Destroy().
<  *
453c446
<                            bool closeio)
---
>                            bool closeio = false)
455c448
<   return IMG_LoadTexture_IO(renderer, src, closeio);
---
>   return Texture(IMG_LoadTexture_IO(renderer, src, closeio));
479,481d471
<  * When done with the returned texture, the app should dispose of it with a
<  * call to Texture.Destroy().
<  *
526,528d515
<  * When done with the returned texture, the app should dispose of it with a
<  * call to Texture.Destroy().
<  *
582,584d568
<  * When done with the returned texture, the app should dispose of it with a
<  * call to Texture.Destroy().
<  *
596d579
<  * @sa Texture.Texture
604c587
<   return IMG_LoadTextureTyped_IO(renderer, src, closeio, type);
---
>   return Texture(IMG_LoadTextureTyped_IO(renderer, src, closeio, type));
1414c1397,1400
< inline Surface LoadAVIF(IOStreamParam src) { return IMG_LoadAVIF_IO(src); }
---
> inline Surface LoadAVIF(IOStreamParam src)
> {
>   return Surface(IMG_LoadAVIF_IO(src));
> }
1448c1434,1437
< inline Surface LoadICO(IOStreamParam src) { return IMG_LoadICO_IO(src); }
---
> inline Surface LoadICO(IOStreamParam src)
> {
>   return Surface{IMG_LoadICO_IO(src)};
> }
1482c1471,1474
< inline Surface LoadCUR(IOStreamParam src) { return IMG_LoadCUR_IO(src); }
---
> inline Surface LoadCUR(IOStreamParam src)
> {
>   return Surface{IMG_LoadCUR_IO(src)};
> }
1516c1508,1511
< inline Surface LoadBMP(IOStreamParam src) { return IMG_LoadBMP_IO(src); }
---
> inline Surface LoadBMP(IOStreamParam src)
> {
>   return Surface{IMG_LoadBMP_IO(src)};
> }
1550c1545,1548
< inline Surface LoadGIF(IOStreamParam src) { return IMG_LoadGIF_IO(src); }
---
> inline Surface LoadGIF(IOStreamParam src)
> {
>   return Surface{IMG_LoadGIF_IO(src)};
> }
1584c1582,1585
< inline Surface LoadJPG(IOStreamParam src) { return IMG_LoadJPG_IO(src); }
---
> inline Surface LoadJPG(IOStreamParam src)
> {
>   return Surface{IMG_LoadJPG_IO(src)};
> }
1618c1619,1622
< inline Surface LoadJXL(IOStreamParam src) { return IMG_LoadJXL_IO(src); }
---
> inline Surface LoadJXL(IOStreamParam src)
> {
>   return Surface{IMG_LoadJXL_IO(src)};
> }
1652c1656,1659
< inline Surface LoadLBM(IOStreamParam src) { return IMG_LoadLBM_IO(src); }
---
> inline Surface LoadLBM(IOStreamParam src)
> {
>   return Surface{IMG_LoadLBM_IO(src)};
> }
1686c1693,1696
< inline Surface LoadPCX(IOStreamParam src) { return IMG_LoadPCX_IO(src); }
---
> inline Surface LoadPCX(IOStreamParam src)
> {
>   return Surface{IMG_LoadPCX_IO(src)};
> }
1720c1730,1733
< inline Surface LoadPNG(IOStreamParam src) { return IMG_LoadPNG_IO(src); }
---
> inline Surface LoadPNG(IOStreamParam src)
> {
>   return Surface{IMG_LoadPNG_IO(src)};
> }
1754c1767,1770
< inline Surface LoadPNM(IOStreamParam src) { return IMG_LoadPNM_IO(src); }
---
> inline Surface LoadPNM(IOStreamParam src)
> {
>   return Surface{IMG_LoadPNM_IO(src)};
> }
1788c1804,1807
< inline Surface LoadSVG(IOStreamParam src) { return IMG_LoadSVG_IO(src); }
---
> inline Surface LoadSVG(IOStreamParam src)
> {
>   return Surface{IMG_LoadSVG_IO(src)};
> }
1822c1841,1844
< inline Surface LoadQOI(IOStreamParam src) { return IMG_LoadQOI_IO(src); }
---
> inline Surface LoadQOI(IOStreamParam src)
> {
>   return Surface{IMG_LoadQOI_IO(src)};
> }
1856c1878,1881
< inline Surface LoadTGA(IOStreamParam src) { return IMG_LoadTGA_IO(src); }
---
> inline Surface LoadTGA(IOStreamParam src)
> {
>   return Surface{IMG_LoadTGA_IO(src)};
> }
1890c1915,1918
< inline Surface LoadTIF(IOStreamParam src) { return IMG_LoadTIF_IO(src); }
---
> inline Surface LoadTIF(IOStreamParam src)
> {
>   return Surface{IMG_LoadTIF_IO(src)};
> }
1924c1952,1955
< inline Surface LoadXCF(IOStreamParam src) { return IMG_LoadXCF_IO(src); }
---
> inline Surface LoadXCF(IOStreamParam src)
> {
>   return Surface{IMG_LoadXCF_IO(src)};
> }
1958c1989,1992
< inline Surface LoadXPM(IOStreamParam src) { return IMG_LoadXPM_IO(src); }
---
> inline Surface LoadXPM(IOStreamParam src)
> {
>   return Surface{IMG_LoadXPM_IO(src)};
> }
1992c2026
< inline Surface LoadXV(IOStreamParam src) { return IMG_LoadXV_IO(src); }
---
> inline Surface LoadXV(IOStreamParam src) { return Surface{IMG_LoadXV_IO(src)}; }
2026c2060,2063
< inline Surface LoadWEBP(IOStreamParam src) { return IMG_LoadWEBP_IO(src); }
---
> inline Surface LoadWEBP(IOStreamParam src)
> {
>   return Surface{IMG_LoadWEBP_IO(src)};
> }
2037,2039d2073
<  * When done with the returned surface, the app should dispose of it with a
<  * call to Surface.Destroy().
<  *
2041,2042c2075
<  * @param width desired width of the generated surface, in pixels.
<  * @param height desired height of the generated surface, in pixels.
---
>  * @param size desired width and height of the generated surface, in pixels.
2049c2082
<   return IMG_LoadSizedSVG_IO(src, size);
---
>   return Surface(IMG_LoadSizedSVG_IO(src, size.x, size.y));
2059,2061d2091
<  * When done with the returned surface, the app should dispose of it with a
<  * call to Surface.Destroy().
<  *
2071c2101
<   return IMG_ReadXPMFromArray(xpm);
---
>   return Surface{IMG_ReadXPMFromArray(xpm)};
2093c2123
<   return IMG_ReadXPMFromArrayToRGB888(xpm);
---
>   return Surface{IMG_ReadXPMFromArrayToRGB888(xpm)};
2108,2109d2137
<  *
<  * @sa SaveAVIF
2133,2134d2160
<  *
<  * @sa SaveAVIF
2177,2178d2202
<  *
<  * @sa SavePNG
2180c2204,2206
< inline void SavePNG(SurfaceParam surface, IOStreamParam dst, bool closeio)
---
> inline void SavePNG(SurfaceParam surface,
>                     IOStreamParam dst,
>                     bool closeio = false)
2197,2198d2222
<  *
<  * @sa SaveJPG
2222,2223d2245
<  *
<  * @sa SaveJPG
2310c2332
<   Animation(IOStreamParam src, bool closeio)
---
>   Animation(IOStreamParam src, bool closeio = false)
2357d2378
<    * @sa Animation.Animation
2362c2383,2386
<   int GetWidth() const { static_assert(false, "Not implemented"); }
---
>   /**
>    * Get the width in pixels.
>    */
>   int GetWidth() const { return get()->w; }
2364c2388,2391
<   int GetHeight() const { static_assert(false, "Not implemented"); }
---
>   /**
>    * Get the height in pixels.
>    */
>   int GetHeight() const { return get()->h; }
2366c2393,2396
<   Point GetSize() const { static_assert(false, "Not implemented"); }
---
>   /**
>    * Get the size in pixels.
>    */
>   Point GetSize() const { return Point(GetWidth(), GetHeight()); }
2368c2398,2401
<   int GetCount() const { static_assert(false, "Not implemented"); }
---
>   /**
>    * Return the number of frames.
>    */
>   int GetCount() const { return m_resource->count; }
2370c2403,2408
<   Surface GetFrame(int index) const { static_assert(false, "Not implemented"); }
---
>   /**
>    * Return the frame image under given index.
>    *
>    * @param index the index to get frame, within [0, GetCount() - 1]
>    */
>   SurfaceRaw GetFrame(int index) const { return m_resource->frames[index]; }
2372c2410,2415
<   int GetDelay(int index) const { static_assert(false, "Not implemented"); }
---
>   /**
>    * Return the frame delay under given index.
>    *
>    * @param index the index to get frame, within [0, GetCount() - 1]
>    */
>   int GetDelay(int index) const { return m_resource->delays[index]; }
2431c2474
< inline Animation LoadAnimation(IOStreamParam src, bool closeio)
---
> inline Animation LoadAnimation(IOStreamParam src, bool closeio = false)
2461d2503
<  * @sa Animation.Animation
2468c2510
<   return IMG_LoadAnimationTyped_IO(src, closeio, type);
---
>   return Animation(IMG_LoadAnimationTyped_IO(src, closeio, type));
2481d2522
<  * @sa Animation.Animation
2506d2546
<  * @sa Animation.Animation
2510c2550
< inline AnimationRef LoadGIFAnimation(IOStreamParam src)
---
> inline Animation LoadGIFAnimation(IOStreamParam src)
2512c2552
<   return IMG_LoadGIFAnimation_IO(src);
---
>   return Animation(IMG_LoadGIFAnimation_IO(src));
2529d2568
<  * @sa Animation.Animation
2533c2572
< inline AnimationRef LoadWEBPAnimation(IOStreamParam src)
---
> inline Animation LoadWEBPAnimation(IOStreamParam src)
2535c2574
<   return IMG_LoadWEBPAnimation_IO(src);
---
>   return Animation{IMG_LoadWEBPAnimation_IO(src)};
2540a2580,2581
> 
> #endif // defined(SDL3PP_ENABLE_IMAGE) || defined(SDL3PP_DOC)
